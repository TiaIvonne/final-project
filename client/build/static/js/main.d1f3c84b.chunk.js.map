{"version":3,"sources":["components/authentication/PrivateRoute.js","components/main/OfferModal.js","components/main/DisplayOffers.js","components/main/Search.js","components/main/Main.js","components/dashboard/OneRequest.js","components/dashboard/AllRequests.js","components/dashboard/OnePetition.js","components/dashboard/MyPetitions.js","methods.js","components/dashboard/messages/Dialog.js","components/dashboard/messages/RoomList.js","components/dashboard/messages/ChatSession.js","components/dashboard/messages/RoomUsers.js","components/dashboard/messages/DirectMessages.js","components/dashboard/UserSettings.js","components/dashboard/MyProfile.js","components/dashboard/UserDashboard.js","components/publish-offer/PublishOffer.js","components/authentication/Login.js","components/authentication/Signup.js","components/author-profile/Review.js","components/author-profile/AuthorProfile.js","components/Footer.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["PrivateRoute","_ref","Component","component","loggedIn","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","display","hide","OfferModal","state","title","author","description","category","errorTimeWallet","myOffer","undefined","handleApply","event","preventDefault","axios","method","url","concat","config","api","data","offerId","_this","offerIdentificator","withCredentials","then","responseFromApi","message","setState","history","push","catch","err","console","log","sendEmail","redirectToLogin","redirectToAuthorProfile","_this2","this","className","style","toggle","react_router_dom","onClick","close","aria-label","authorUsername","src","REACT_APP_api","image","alt","FacebookShareButton","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","PinterestShareButton","PinterestIcon","postalCode","dist_default","format","withTitle","dateOffer","durationOffer","e","color","DisplayOffers","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getAllOffers","listOfOffers","handlePageClick","currentPage","Number","target","id","bind","assertThisInitialized","offersPerPage","_this$state","indexOfLastOffer","indexOfFirstOffer","renderOffers","slice","map","offer","key","_id","main_OfferModal","authorProfileImage","date","duration","pageNumbers","i","Math","ceil","length","renderPageNumbers","number","renderFilteredOffers","filteredOffers","filteredOffer","renderFilteredPageNumbers","Fragment","Search","handleCheck","generalSearch","name","handleSubmit","newSearch","databaseResponse","error","house","technology","music","repair","languages","cooking","onSubmit","onChange","type","main_DisplayOffers","Main","main_Search","OneRequest","approveOffer","updateTimeWallet","offerStatus","offerApproved","updateOffers","status","AllRequests","listOfMyOffers","dashboard_OneRequest","OnePetition","Username","MyPetitions","listOfPetitions","mypetition","dashboard_OnePetition","connectToRoom","arguments","currentUser","messages","subscribeToRoom","roomId","messageLimit","hooks","onMessage","toConsumableArray","onPresenceChanged","currentRoom","roomUsers","users","sort","presence","roomName","customData","isDirectMessage","userIds","filter","rooms","sendDM","_this3","_this$state2","isPrivateChatCreated","room","arr","join","Promise","resolve","createRoom","private","addUserIds","Dialog","userId","handleInput","connectToChatkit","htmlFor","autoFocus","value","placeholder","RoomList","roomList","roomIcon","isPrivate","isRoomActive","ChatSession","time","Date","updatedAt","senderId","text","RoomUsers","user","DirectMessages","showLogin","isLoading","newMessage","_event$target","defineProperty","trim","post","tokenProvider","Chatkit","TokenProvider","ChatManager","instanceLocator","connect","onAddedToRoom","alert","sendMessage","messages_RoomList","messages_ChatSession","messages_RoomUsers","messages_Dialog","UserSettings","email","bio","success","myInput","handleSubmitProfileImage","formData","FormData","form","current","headers","Content-Type","handleSubmitPersonalInfo","editUser","React","createRef","ref","firstname","lastname","username","maxLength","birth","password","pattern","aria-hidden","MyProfile","profileInfo","getProfileInfo","profileImage","timeWallet","registrationDate","UserDashboard","notificationControl","dataFromRequest","statusControl","checkPending","myOffers","petitionsNotification","getMyOffers","getMyPetitions","activeSection","activeMenuItems","openSection","selectedSection","dashboard_AllRequests","dashboard_MyPetitions","messages_DirectMessages","dashboard_MyProfile","dashboard_UserSettings","PublishOffer","publish","newOffer","postalcode","min","Login","newUser","required","SignUp","Review","getReviewerUsername","reviewerId","reviewer","opinion","AuthorProfile","getAuthorInfo","match","params","authorProfile","handleSubmitReview","newReview","sendUserId","userReviewedId","newReviewId","getReviews","listOfReviews","rating","reviewsPerPage","onStarClick","nextValue","prevValue","indexOfLastReview","indexOfFirstReview","renderReviews","review","author_profile_Review","pictureUrl","picture","react_star_rating_component_default","starCount","Footer","UnauthNav","_Component","logMeOut","response","logOut","toggleDropdownMenu","dropdownMenu","inherits","createClass","height","data-target","AuthNav","_Component2","App","aBoolean","Nav_AuthNav","Nav_UnauthNav","exact","path","main_Main","authentication_Login","Signup","authentication_PrivateRoute","currentUsername","components_Footer","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1f3c84b.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\n//render private routes\nconst PrivateRoute = ({ component: Component, loggedIn, ...rest }) => (\n  \n  <Route {...rest} render={(props) => (\n        loggedIn ? (\n            <Component {...props} {...rest}/>\n        ) : (\n          <Redirect to=\"/login\"/>\n        )\n  )}/>\n\n)\n\nexport default PrivateRoute;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Moment from 'react-moment';\n\nimport {\n    FacebookIcon,\n    FacebookShareButton,\n    TwitterShareButton,\n    TwitterIcon,\n    PinterestShareButton,\n    PinterestIcon,\n    \n  } from 'react-share';\n\nimport config from '../../config.json'\n\nconst display = {\n    display: 'block'\n};\n\nconst hide = {\n    display: 'none'\n}\n\nclass OfferModal extends Component {\n    state = { \n        title: '',\n        author: '',\n        description: '',\n        category: '',\n        errorTimeWallet: '',\n        myOffer: undefined\n    }\n\n    handleApply = (event) => {\n        event.preventDefault();\n        axios({\n          method: \"post\",\n          url: `${config.api}/apply`,\n        //   url: `${config.REACT_APP_api}/apply`,\n          data: {offerId: this.props.offerIdentificator},\n          withCredentials: true,\n        })\n        .then(responseFromApi => {\n            if( responseFromApi.data.message === \"Not enough time in the wallet to apply\" ) this.setState({errorTimeWallet: \"You don't have enough time in your wallet to apply to this offer\"})\n            else this.props.history.push('/dashboard')\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n\n    sendEmail = (event) => {\n          event.preventDefault();\n          axios({\n              method:'post',\n              data:{offerId:this.props.offerIdentificator},\n              url: `${config.api}/send-mail`,\n            //   url: `${config.REACT_APP_api}/send-mail`,\n              withCredentials: true,\n          })\n          .then(responseFromApi =>{\n              console.log('sent')\n          })\n          .catch(err => {\n              console.log(err)\n          })\n    }\n\n    redirectToLogin = () => {\n        this.props.history.push('/login')\n    }\n\n\n    redirectToAuthorProfile = () =>{\n        this.props.history.push(`/profile/${this.props.author}`)\n    }  \n\n    render() { \n        return (\n                <div className=\"modal\" style={this.props.toggle ? display : hide}>\n                <div className=\"modal-background\"></div>\n                    <div className=\"modal-card\">\n                        <header className=\"modal-card-head\">\n                            <p className=\"modal-card-title modal-offer-title\">{this.props.title}</p>\n                            <Link>\n                                <button className=\"delete\" onClick={this.props.close} aria-label=\"close\"></button>\n                            </Link>\n                        </header>\n                        <section className=\"modal-card-body\">\n                            <div className='media columns'>\n                            {/* <p className=\"image is-64x64\">\n                                <img src={`${config.REACT_APP_api}/${this.props.authorProfileImage}`} alt=\"\"/>\n                            </p> */}\n                                <div className=\"content column\">\n                                    <p className=\"modal-card-title\">Username: {this.props.authorUsername}</p>\n                                    {/* <p className=\"modal-card-title\">Ratings</p> */}\n                                    <div className=\"level\">\n                                        <div className=\"level-left\">\n                                            <Link>\n                                                <button onClick={this.redirectToAuthorProfile}className=\"button is-success\">See more</button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='media columns'>\n                                <div className='column'>\n                                    <div className=\"columns\">\n                                        <div className=\"column\">\n                                            <img className=\"image is-3by1 modal-image\" src={`${config.REACT_APP_api}/${this.props.image}`} alt=\"\"/>\n                                        </div>\n                                        <div className=\"column\">\n                                            <h1 className=\"modal-card-title\">Description</h1>\n                                            <p>{this.props.description}</p>\n                                            <div className='social-media level-left'>\n                                                <FacebookShareButton url={'https://www.facebook.com'}>\n                                                    <FacebookIcon size={32} round={true}/>\n                                                </FacebookShareButton>\n                                                <TwitterShareButton url={'https://www.twitter.com'}>\n                                                    <TwitterIcon size={32} round={true}/>\n                                                </TwitterShareButton>\n                                                <PinterestShareButton url={'https://www.pinterest.com/'}>\n                                                    <PinterestIcon size={32} round={true}/>\n                                                </PinterestShareButton>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"columns\">\n                                        <div className=\"column\">\n                                            <h1 className=\"modal-card-title\">Category</h1>\n                                                <p>{this.props.category}</p>\n                                            <h1 className=\"modal-card-title\">Postal Code</h1>\n                                                <p>{this.props.postalCode}</p>\n                                        </div>\n                                        <div className=\"column\">                 \n                                            <h1 className=\"modal-card-title\">Date</h1>\n                                                <p><Moment format=\"D MMM YYYY\" withTitle>{this.props.dateOffer}</Moment></p>\n                                            <h1 className=\"modal-card-title\">Duration</h1>\n                                                <p>{this.props.durationOffer} hour(s)</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n                        <footer className=\"modal-card-foot\">\n                      \n                            <Link>\n                            {this.props.loggedIn ?\n                                <button onClick={(e) => {\n                                this.handleApply(e);\n                                this.sendEmail(e)}\n                                } className=\"button is-success\">Apply </button>:\n                                <button onClick={this.redirectToLogin} className=\"button is-dark\">Apply </button>\n                            }\n                            </Link>\n                            {this.state.errorTimeWallet?\n                            <p style={{color: 'red'}}>{this.state.errorTimeWallet}</p>:\n                            <p></p>\n                            }\n                        </footer>\n                    </div>\n                </div>\n        );\n    }\n}\n\n\n\nexport default OfferModal;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport OfferModal from './OfferModal'\nimport { Link } from 'react-router-dom'\n// const config = process.env\nimport config from '../../config.json'\n\n//this component display all offers in the main page with OPEN status\n//pending and close offers, don't show in main page\n\nclass DisplayOffers extends Component {\n\n    constructor(props){\n        super(props);\n        this.toggle = this.toggle.bind(this)\n        this.state={\n            toggle: false,\n            listOfOffers: [],\n            currentPage: 1,\n            offersPerPage: 5\n        }\n    }\n    \n    toggle(offerId){\n        this.setState(() =>({\n            toggle: offerId\n        }));\n    }\n\n    getAllOffers = () =>{\n        axios({\n          method: \"get\",\n          url: `${config.api}/display-offers`,\n        //   url: `${config.REACT_APP_api}/display-offers`,\n          withCredentials: true\n        })\n        .then(responseFromApi => {\n          this.setState({\n            listOfOffers: responseFromApi.data\n          })\n        })\n        .catch(err => {\n            console.log('error')\n        })\n    }\n\n    handlePageClick = (event) => {\n        this.setState({currentPage: Number(event.target.id)})\n    }\n\n    componentDidMount() {\n        this.getAllOffers();\n    }\n\n    render() { \n        //Set pagination for list of offers\n        const { listOfOffers, currentPage, offersPerPage } = this.state\n        const indexOfLastOffer = currentPage * offersPerPage\n        const indexOfFirstOffer = indexOfLastOffer - offersPerPage\n        const currentOffers = listOfOffers.slice(indexOfFirstOffer, indexOfLastOffer)\n        const renderOffers = currentOffers.map((offer) => {\n            return (\n                <div key={offer._id}>\n                    <div className=\"tile is-ancestor\">\n                        <div className=\"tile is-child box\">\n                                <h3 className=\"title\">{offer.title}</h3>\n                                <h4><strong>User</strong>: {offer.authorUsername}</h4>\n                                <p>{offer.postalCode}</p>\n                                <p>{offer.description}</p>\n                                <p><strong>Category</strong>: {offer.category}</p>\n                            <Link className='btn' onClick={()=> {this.toggle(offer._id)}}>Open offer</Link>\n                        </div>\n                    </div>\n                    <OfferModal {...this.props} close={this.toggle} \n                        toggle={this.state.toggle === offer._id} \n                        offerIdentificator={offer._id}\n                        title={offer.title} \n                        image={offer.image}\n                        author={offer.author}\n                        authorUsername={offer.authorUsername} \n                        authorProfileImage={offer.authorProfileImage}\n                        postalCode={offer.postalCode}\n                        description={offer.description} \n                        category={offer.category}\n                        dateOffer={offer.date}\n                        durationOffer={offer.duration}\n                    />\n                </div>\n            )\n        })\n\n        //Numbers for pagination\n        const pageNumbers = []\n        for (let i = 1; i <= Math.ceil(listOfOffers.length / offersPerPage); i++) {\n            pageNumbers.push(i)\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            return (\n                <li\n                    key={number}\n                    id={number}\n                    onClick={this.handlePageClick}\n                    className=\"page-numbers column\"\n                >\n                    {number}\n                </li>\n            )\n        })\n\n        //Pagination for the list of offers you get when you search\n        const currentFilteredOffers = this.props.filteredOffers.slice(indexOfFirstOffer, indexOfLastOffer)\n\n        let renderFilteredOffers = currentFilteredOffers.map((filteredOffer) => {\n            return (\n                <div key={filteredOffer._id}>\n                    <div className=\"tile is-ancestor\">\n                        <div className=\"tile is-child box\">\n                                <h3 className=\"title\">{filteredOffer.title}</h3>\n                                {/* <img src={`${config.REACT_APP_api}/${filteredOffer.authorProfileImage}`} alt=\"\"/> */}\n                                <img src={`${config.api}/${filteredOffer.authorProfileImage}`} alt=\"\"/>\n                                <h4><strong>User</strong>: {filteredOffer.authorUsername}</h4>\n                                <p>{filteredOffer.postalCode}</p>\n                                <p>{filteredOffer.description}</p>\n                                <p><strong>Category</strong>: {filteredOffer.category}</p>\n                            <Link className='btn' onClick={()=> {this.toggle(filteredOffer._id)}}> Open offer</Link>\n                        </div>\n                    </div>\n                    <OfferModal  {...this.state} {...this.props} close={this.toggle} \n                        toggle={this.state.toggle === filteredOffer._id} \n                        offerIdentificator={filteredOffer._id}\n                        title={filteredOffer.title} \n                        image={filteredOffer.image}\n                        author={filteredOffer.author}\n                        authorUsername={filteredOffer.authorUsername}\n                        authorProfileImage={filteredOffer.authorProfileImage}\n                        postalCode={filteredOffer.postalCode}\n                        description={filteredOffer.description} \n                        category={filteredOffer.category}\n                        dateOffer={filteredOffer.date}\n                        durationOffer={filteredOffer.duration}\n                    />\n                </div>\n            )\n        })\n\n        //Numbers for the list obtained after searching\n        const pageFilteredNumbers = []\n        for (let i = 1; i <= Math.ceil(this.props.filteredOffers.length / offersPerPage); i++) {\n            pageNumbers.push(i)\n        }\n\n        const renderFilteredPageNumbers = pageFilteredNumbers.map(number => {\n            return (\n                <li\n                    key={number}\n                    id={number}\n                    onClick={this.handlePageClick}\n                    className=\"page-numbers column\"\n                >\n                    {number}\n                </li>\n            )\n        })\n\n\n            return ( \n                <>\n                {/* Ternary operator to show the whole list of offers or the filtered one \n                if you have done a search */}\n                { this.props.filteredOffers.length > 0 ? \n                 <div>\n                    <div className=\"list is-hoverable\">\n                            { renderFilteredOffers }\n                            <div className=\"columns page-numbers-column\">\n                                <ul id=\"page-numbers\" className=\"level column is-half is-offset-one-quarter columns\">\n                                    { renderFilteredPageNumbers }\n                                </ul>\n                            </div>\n                    </div>\n                </div>\n\n                :\n\n                <div>\n                    <div className=\"list is-hoverable\">\n                            { renderOffers }\n                            <div className=\"columns page-numbers-column\">\n                                <ul id=\"page-numbers\" className=\"level column is-half is-offset-one-quarter columns\">\n                                    { renderPageNumbers }\n                                </ul>\n                            </div>\n                    </div>\n                </div>\n                        }\n                        </>\n            );\n    }\n}\n\n\nexport default DisplayOffers;","import React, { Component } from 'react';\nimport DisplayOffers from './DisplayOffers';\nimport axios from 'axios';\nimport config from '../../config.json'\n\n//render general search\nclass Search extends Component {\n    constructor(props){\n        super(props)\n    this.state = { \n        house:      '',\n        technology:   '',\n        music:      '',\n        repair:     '',\n        languages:  '',\n        cooking:    '',\n        filteredOffers: []\n     }\n    }\n\n\n    handleCheck = (event)=> {\n        let generalSearch = {} //empty object\n        generalSearch[event.target.name] = event.target.name\n        this.setState(generalSearch)\n        \n    }\n\n    //submit button\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        let newSearch = this.state  \n        axios({\n        method: 'post',\n          url: `${config.REACT_APP_api}/search`,\n          data: newSearch,\n          withCredentials : true,\n          }).then(databaseResponse => {\n            this.setState({filteredOffers: databaseResponse.data})\n          }).catch(err => {\n              this.setState({error: 'Something went wrong! We could not do the search'})\n          })\n    }\n    \n\n    render() { \n        return ( \n            <div className=\"container is-fluid\">\n            <div className=\"columns\">\n            <div className=\"search-column column is-2\">\n            <form onSubmit={this.handleSubmit} className=\"section\">\n                \n                <label className=\"checkbox level\">\n                    <input onChange={this.handleCheck} name='house' type=\"checkbox\" />\n                    &nbsp;House &nbsp;\n                </label>\n\n                <label className=\"checkbox level\">\n                    <input onChange={this.handleCheck} name='technology'type=\"checkbox\" />\n                    &nbsp;Technology &nbsp;\n                </label>\n\n                <label className=\"checkbox level\">\n                    <input onChange={this.handleCheck} name='music'type=\"checkbox\" />\n                    &nbsp;Music &nbsp;\n                </label>\n\n                <label className=\"checkbox level\">\n                    <input onChange={this.handleCheck} name='repair'type=\"checkbox\" />\n                    &nbsp;Repair &nbsp;\n                </label>\n\n                <label className=\"checkbox level\">\n                    <input onChange={this.handleCheck} name='languages'type=\"checkbox\" />\n                    &nbsp;Languages &nbsp;\n                </label>\n\n                <label className=\"checkbox level\">\n                    <input onChange={this.handleCheck} name='cooking'type=\"checkbox\" />\n                    &nbsp;Cooking\n                </label>\n\n                <div className=\"control level\">\n                    <button className=\"button is-link\">Search </button>\n                </div>\n                <p style={{color: 'red'}}>{this.state.error? this.state.error:''}</p>\n            </form>\n            </div>\n\n            <div className=\"column\">\n            <DisplayOffers {...this.props} filteredOffers={this.state.filteredOffers}\n            />\n            </div>\n            </div>\n            \n            </div>\n\n         );\n    }\n}\n \nexport default Search;","import React, { Component } from 'react';\nimport Search from './Search'\n\n//first page render search, this component is public\n//if you wanna make some transactios into web site \nclass Main extends Component {\n    render() { \n        return ( \n            <>\n            <section className=\"hero is-medium is-bold hero-bg\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                    </div>\n                </div>\n            </section>\n            <div className=\"section\">\n                <Search {...this.props}/>\n            </div>\n            </>\n         );\n    }\n}\n \nexport default Main;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport axios  from 'axios';\nimport Moment from \"react-moment\";\nimport config from '../../config.json'\n\nclass OneRequest extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            offerStatus: '',\n            error: '',\n            offerApproved: undefined\n        }\n    }\n\n    approveOffer = (event) => {\n        event.preventDefault();\n        axios({\n            method: 'post',\n            url: `${config.api}/approve-offer`,\n            // url: `${config.REACT_APP_api}/approve-offer`,\n            data: {offerId: this.props.offerId},\n            withCredentials : true,\n        }).then(databaseResponse => {\n            this.updateTimeWallet(event)\n            this.setState({\n                offerStatus: 'Approved',\n                offerApproved: databaseResponse.data\n            })\n            this.props.updateOffers()\n            this.props.history.push('/dashboard')\n        }).catch(err => {\n            this.setState({error: 'The offer could not be approved'})\n        })\n    }\n    updateTimeWallet = (event) => {\n        event.preventDefault();\n        axios({\n            method: 'post',\n            url: `${config.api}/update-time-wallet`,\n            // url: `${config.REACT_APP_api}/update-time-wallet`,\n            data: {offerId: this.props.offerId},\n            withCredentials : true,\n        }).then(databaseResponse => {\n            console.log('updated time wallet')\n        }).catch(err => {\n            this.setState({error: 'The time wallet could not be updated'})\n        })\n    }\n    render() { \n        return (\n            <div className=\"card\">\n                <header className=\"card-header\">\n                    <p className=\"card-header-title\">\n                    {this.props.title}\n                    </p>\n                </header>\n                <div className=\"card-content\">\n                    <div className=\"content\">\n                    <p>My username: &nbsp;{this.props.authorUsername} </p>\n                    <p>Date: &nbsp; <Moment format=\"D MMM YYYY\" withTitle>{this.props.date}</Moment></p>\n                    <p>Duration: &nbsp; {this.props.duration} hour(s)</p>\n                    <p style={{color: 'green'}}>{this.state.offerStatus ? `You got ${this.state.offerApproved.duration} hour(s) in your Time Wallet!` : ''}</p>\n                    <p style={{color: 'red'}}>{this.state.error? this.state.error:''}</p>\n                    </div>\n                </div>\n                <footer className=\"card-footer\">\n                    {this.state.offerApproved ?\n                        <h1 className=\"card-footer-item\"> Offer status: &nbsp; {this.state.offerApproved.status}</h1> :\n                        <h1 className=\"card-footer-item\"> Offer status: &nbsp; {this.props.status}</h1>\n                    }\n                    {this.state.offerStatus === 'Approved' ?\n                    <Link className=\"card-footer-item button is-success\">Approved!</Link> :\n                    <>\n                        {this.props.status === 'Open' ?\n                        null :\n                        <>\n                            {this.props.status === 'Approved'? \n                            <Link className=\"card-footer-item button is-success\">Approved!</Link> :\n                            <Link onClick={this.approveOffer} className=\"card-footer-item button is-warning\">Approve</Link>\n                            }\n                        </>\n                        }\n                    </>\n                    }\n                </footer>\n            </div>\n        );\n    }\n}\n \nexport default OneRequest;","import React, { Component } from 'react';\nimport OneRequest from './OneRequest'\n\n//this component render my own offer's request\nclass AllRequests extends Component {\n    render() { \n        return (\n            <>\n            {this.props.listOfMyOffers.length === 0 ?\n                <p>You didn't get any request for any of your offers. <em>Yet!</em></p> :\n                <div>\n                { this.props.listOfMyOffers.map( myOffer => {\n                  return(\n                    <OneRequest {...this.props} \n                    offerId={myOffer._id}\n                    title={myOffer.title}\n                    authorUsername = {myOffer.authorUsername}\n                    date={myOffer.date}\n                    duration={myOffer.duration}\n                    status={myOffer.status}\n                    />\n                  )\n                })\n                }\n            </div> \n\n            }\n            </>\n\n        );\n    }\n}\n\nexport default AllRequests;","import React, { Component } from 'react';\nimport Moment from 'react-moment'\n\n\nclass OnePetition extends Component {\n    render() { \n        return (\n            <div className=\"card\">\n                <header className=\"card-header\">\n                    <p className=\"card-header-title\">\n                    {this.props.title}\n                    </p>\n                </header>\n                <div className=\"card-content\">\n                    <div className=\"content\">\n                    <p>Author: {this.props.Username}</p>\n                    <p>Date: <Moment format=\"D MMM YYYY\" withTitle>{this.props.date}</Moment></p>\n                    <p>Duration: {this.props.duration} hour(s)</p>\n                    </div>\n                </div>\n                <footer className=\"card-footer\">\n                {(() => {\n                    switch(this.props.status) {\n                        case 'Open':\n                            return <h1 className=\"card-footer-item\">{this.props.status}</h1>;\n                        case 'Pending':\n                            return <h1 className=\"card-footer-item has-background-warning\">{this.props.status}</h1>;\n                        case 'Approved':\n                            return <h1 className=\"card-footer-item has-background-success\">{this.props.status}</h1>;\n                        default:\n                            return null;\n                    }\n                })()}\n                </footer>\n            </div>\n        );\n    }\n}\n\n\nexport default OnePetition;","import React, { Component } from 'react';\nimport OnePetition from './OnePetition'\nimport { Link } from 'react-router-dom'\n\n//render my applications for another offers\nclass MyPetitions extends Component {\n    render() { \n        return (\n            <>\n            { this.props.listOfPetitions.length === 0 ?\n            <p>You still haven't applied to any offer, do you want to check <Link to=\"/\">all the avalaible offers</Link> now?</p> :\n            <div>\n                { this.props.listOfPetitions.map( mypetition => {\n                return(\n                    <OnePetition {...this.props} \n                    title={mypetition.title}\n                    Username = {mypetition.authorUsername}\n                    date={mypetition.date}\n                    duration={mypetition.duration}\n                    status={mypetition.status}\n                    />\n                )\n                })\n                }\n            </div> \n\n            }\n            </>\n\n    )\n}\n}\n\nexport default MyPetitions;","import Chatkit from '@pusher/chatkit-client';\nimport axios from 'axios';\nimport config from './config.json'\n\nfunction sendMessage(event) {\n  event.preventDefault();\n  const { newMessage, currentUser, currentRoom } = this.state;\n\n  if (newMessage.trim() === '') return;\n\n  currentUser.sendMessage({\n    text: newMessage,\n    roomId: `${currentRoom.id}`,\n  });\n\n  this.setState({\n    newMessage: '',\n  });\n}\n\nfunction handleInput(event) {\n  const { value, name } = event.target;\n\n  this.setState({\n    [name]: value,\n  });\n}\n\nfunction connectToRoom(id = '19495675') {\n  const { currentUser } = this.state;\n\n  this.setState({\n    messages: [],\n  });\n\n  return currentUser\n    .subscribeToRoom({\n      roomId: `${id}`,\n      messageLimit: 100,\n      hooks: {\n        onMessage: message => {\n          this.setState({\n            messages: [...this.state.messages, message],\n          });\n        },\n        onPresenceChanged: () => {\n          const { currentRoom } = this.state;\n          this.setState({\n            roomUsers: currentRoom.users.sort(a => {\n              if (a.presence.state === 'online') return -1;\n\n              return 1;\n            }),\n          });\n        },\n      },\n    })\n    .then(currentRoom => {\n      const roomName =\n        currentRoom.customData && currentRoom.customData.isDirectMessage\n          ? currentRoom.customData.userIds.filter(\n              id => id !== currentUser.id\n            )[0]\n          : currentRoom.name;\n\n      this.setState({\n        currentRoom,\n        roomUsers: currentRoom.users,\n        rooms: currentUser.rooms,\n        roomName,\n      });\n    })\n    .catch(console.error);\n}\n\nfunction connectToChatkit(event) {\n  event.preventDefault();\n\n  const { userId } = this.state;\n\n  if (userId === null || userId.trim() === '') {\n    alert('Invalid userId');\n    return;\n  }\n\n  this.setState({\n    isLoading: true,\n  });\n\n  axios\n    .post(`${config.api}/chat-users`, { userId })\n    .then(() => {\n      const tokenProvider = new Chatkit.TokenProvider({\n        url: `${config.api}/authenticate`,\n      });\n\n      const chatManager = new Chatkit.ChatManager({\n        instanceLocator: 'v1:us1:f51d67d6-018a-4569-b4d8-59e517592a01',\n        userId,\n        tokenProvider,\n      });\n\n      return chatManager\n        .connect({\n          onAddedToRoom: room => {\n            const { rooms } = this.state;\n            this.setState({\n              rooms: [...rooms, room],\n            });\n          },\n        })\n        .then(currentUser => {\n          this.setState(\n            {\n              currentUser,\n              showLogin: false,\n              isLoading: false,\n              rooms: currentUser.rooms,\n            },\n            () => connectToRoom.call(this)\n          );\n        });\n    })\n    .catch(console.error);\n}\n\nfunction createPrivateRoom(id) {\n  const { currentUser, rooms } = this.state;\n  const roomName = `${currentUser.id}_${id}`;\n\n  const isPrivateChatCreated = rooms.filter(room => {\n    if (room.customData && room.customData.isDirectMessage) {\n      const arr = [currentUser.id, id];\n      const { userIds } = room.customData;\n\n      if (arr.sort().join('') === userIds.sort().join('')) {\n        return {\n          room,\n        };\n      }\n    }\n\n    return false;\n  });\n\n  if (isPrivateChatCreated.length > 0) {\n    return Promise.resolve(isPrivateChatCreated[0]);\n  }\n\n  return currentUser.createRoom({\n    name: `${roomName}`,\n    private: true,\n    addUserIds: [`${id}`],\n    customData: {\n      isDirectMessage: true,\n      userIds: [currentUser.id, id],\n    },\n  });\n}\n\nfunction sendDM(id) {\n  createPrivateRoom.call(this, id).then(room => {\n    connectToRoom.call(this, room.id);\n  });\n}\n\nexport { sendMessage, handleInput, connectToRoom, connectToChatkit, sendDM };\n","import React from 'react';\n    import Proptypes from 'prop-types';\n\n    const Dialog = props => {\n      const { userId, handleInput, connectToChatkit } = props;\n\n      return (\n        <div className=\"dialog-container\">\n          <div className=\"dialog\">\n            <form className=\"dialog-form\" onSubmit={connectToChatkit}>\n              <label className=\"username-label\" htmlFor=\"username\">\n                Enter your username\n              </label>\n              <input\n                id=\"username\"\n                className=\"username-input\"\n                autoFocus\n                type=\"text\"\n                name=\"userId\"\n                value={userId}\n                onChange={handleInput}\n                placeholder=\"Enter your username\"\n              />\n              <button type=\"submit\" className=\"submit-btn\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      );\n    };\n\n    Dialog.propTypes = {\n      userId: Proptypes.string.isRequired,\n      handleInput: Proptypes.func.isRequired,\n      connectToChatkit: Proptypes.func.isRequired,\n    };\n\n    export default Dialog;","import React from 'react';\nimport Proptypes from 'prop-types';\n\n//setuo roomlist for a public chat\nconst RoomList = props => {\n  const { rooms, currentRoom, connectToRoom, currentUser } = props;\n  const roomList = rooms.map(room => {\n  const roomIcon = !room.isPrivate ? '🌐' : '🔒';\n  const isRoomActive = room.id === currentRoom.id ? 'active' : '';\n\n    return (\n      <li\n        className={isRoomActive}\n        key={room.id}\n        onClick={() => connectToRoom(room.id)}\n      >\n        <span className=\"room-icon\">{roomIcon}</span>\n        {room.customData && room.customData.isDirectMessage ? (\n          <span className=\"room-name\">\n            {room.customData.userIds.filter(id => id !== currentUser.id)[0]}\n          </span>\n        ) : (\n          <span className=\"room-name\">{room.name}</span>\n        )}\n      </li>\n    );\n  });\n  return (\n    <div className=\"rooms\">\n      <ul className=\"chat-rooms\">{roomList}</ul>\n    </div>\n  );\n};\n\nRoomList.propTypes = {\n  rooms: Proptypes.array.isRequired,\n  currentRoom: Proptypes.object.isRequired,\n  connectToRoom: Proptypes.func.isRequired,\n  currentUser: Proptypes.object.isRequired,\n};\n\nexport default RoomList;","import React from 'react';\nimport Proptypes from 'prop-types';\nimport { format } from 'date-fns';\n\n//chat session using chatkit API\nconst ChatSession = props => {\n  const { messages } = props;\n  return messages.map(message => {\n    const time = format(new Date(`${message.updatedAt}`), 'HH:mm');\n\n    return (\n      <li className=\"message\" key={message.id}>\n        <div>\n          <span className=\"user-id\">{message.senderId}</span>\n          <span>{message.text}</span>\n        </div>\n        <span className=\"message-time\">{time}</span>\n      </li>\n    );\n  });\n};\n\nChatSession.propTypes = {\n  messages: Proptypes.arrayOf(Proptypes.object).isRequired,\n};\n\nexport default ChatSession;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nconst RoomUsers = props => {\n  const { roomUsers, sendDM, currentUser } = props;\n  const users = roomUsers.map(user => {\n    return (\n      <li className=\"room-member\" key={user.id}>\n        <div>\n          <span className={`presence ${user.presence.state}`} />\n          <span>{user.name}</span>\n        </div>\n        {currentUser.id !== user.id ? (\n          <button\n            onClick={() => sendDM(user.id)}\n            title={`Send ${user.name} a direct message`}\n            className=\"send-dm\"\n          >\n            +\n          </button>\n        ) : null}\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"room-users\">\n      <ul>{users}</ul>\n    </div>\n  );\n};\n\nRoomUsers.propTypes = {\n  roomUsers: Proptypes.array.isRequired,\n  sendDM: Proptypes.func.isRequired,\n  currentUser: Proptypes.object.isRequired,\n};\n\nexport default RoomUsers;","import React, { Component } from 'react';\nimport {\n    handleInput,\n    connectToChatkit,\n    connectToRoom,\n    sendMessage,\n    sendDM,\n    } from '../../../methods';\nimport Dialog from './Dialog';\nimport RoomList from './RoomList';\nimport ChatSession from './ChatSession';\nimport RoomUsers from './RoomUsers';\n\n\nimport '../../../DirectMessages.css'\n//this component it's for render and send private messages between time4time user's\nclass DirectMessages extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userId: '',\n            showLogin: true,\n            isLoading: false,\n            currentUser: null,\n            currentRoom: null,\n            rooms: [],\n            roomUsers: [],\n            roomName: null,\n            messages: [],\n            newMessage: '',\n        }\n        this.handleInput = handleInput.bind(this);\n        this.connectToChatkit = connectToChatkit.bind(this);\n        this.connectToRoom = connectToRoom.bind(this);\n        this.sendMessage = sendMessage.bind(this);\n        this.sendDM = sendDM.bind(this);\n        }\n\n    render() { \n        const {\n            userId,\n            showLogin,\n            rooms,\n            currentRoom,\n            currentUser,\n            messages,\n            newMessage,\n            roomUsers,\n            roomName,\n        } = this.state;\n        return(\n            <div className=\"direct-messages\">\n            <aside className=\"sidebar left-sidebar\">\n              {currentUser ? (\n                <div className=\"user-profile\">\n                  <span className=\"username\">{currentUser.name}</span>\n                  <span className=\"user-id\">{`@${currentUser.id}`}</span>\n                </div>\n              ) : null}\n              {currentRoom ? (\n                <RoomList\n                  rooms={rooms}\n                  currentRoom={currentRoom}\n                  connectToRoom={this.connectToRoom}\n                  currentUser={currentUser}\n                />\n              ) : null}\n            </aside>\n            <section className=\"chat-screen\">\n              <header className=\"chat-header\">\n                {currentRoom ? <h3>{roomName}</h3> : null}\n              </header>\n              <ul className=\"chat-messages\">\n                <ChatSession messages={messages} />\n              </ul>\n              <footer className=\"chat-footer\">\n                <form onSubmit={this.sendMessage} className=\"message-form\">\n                  <input\n                    type=\"text\"\n                    value={newMessage}\n                    name=\"newMessage\"\n                    className=\"message-input\"\n                    placeholder=\"Type your message and hit ENTER to send\"\n                    onChange={this.handleInput}\n                  />\n                </form>\n              </footer>\n            </section>\n            <aside className=\"sidebar right-sidebar\">\n              {currentRoom ? (\n                <RoomUsers\n                  currentUser={currentUser}\n                  sendDM={this.sendDM}\n                  roomUsers={roomUsers}\n                />\n              ) : null}\n            </aside>\n            {showLogin ? (\n              <Dialog\n                userId={userId}\n                handleInput={this.handleInput}\n                connectToChatkit={this.connectToChatkit}\n              />\n            ) : null}\n          </div>\n            )\n    }\n}\n \nexport default DirectMessages;","import React, { Component } from 'react';\nimport axios  from 'axios';\nimport config from '../../config.json'\n\nclass UserSettings extends Component {\n    constructor(props) {\n        super(props)\n        this.form = React.createRef()\n    }\n    state = {\n        email: '',\n        bio: '',\n        user: [],\n        error: '',\n        success: '',\n        \n    }\n    handleInput = (event)=> {\n        let myInput = {} //empty object\n        myInput[event.target.name] = event.target.value\n        this.setState(myInput)\n    }\n\n    handleSubmitProfileImage = (event) => {\n        event.preventDefault();\n        let formData = new FormData(this.form.current) \n        axios({\n            method: 'post',\n            url: `${config.api}/profile-image`,\n            // url: `${config.REACT_APP_api}/profile-image`,\n            config: { headers: {'Content-Type': 'multipart/form-data' }},\n            data: formData,\n            withCredentials : true,\n        }).then(databaseResponse => {\n            \n            this.setState({success: 'You updated your personal information successfully'})\n            this.props.history.push('/dashboard')\n        }).catch(err => {\n            this.setState({error: 'Could not edit personal information'})\n        })\n    }\n    handleSubmitPersonalInfo = (event) => {\n        event.preventDefault();\n        let editUser = this.state\n        axios({\n            method: 'post',\n            url: `${config.api}/user-settings`,\n            // url: `${config.REACT_APP_api}/user-settings`,\n            data: editUser,\n            withCredentials : true,\n        }).then(databaseResponse => {\n            this.setState({success: 'You updated your personal information successfully'})\n            this.props.history.push('/dashboard')\n        }).catch(err => {\n            this.setState({error: 'Could not edit personal information'})\n        })\n    }\n\n    render() { \n        return (\n                <section>\n                            <div className=\"column\">\n                            <p style={{color: 'green'}}>{this.state.success? this.state.success:''}</p>\n                                <h3 className=\"title has-text-grey\">User's settings</h3>\n                                <div className=\"box\">\n                                    <form ref={this.form} onSubmit={this.handleSubmitProfileImage}>\n                                        <div className=\"field\">\n                                        <label className=\"label\">Image</label>\n                                            <div className=\"control\">\n                                                <input onChange={this.handleInput} name='profile-image' className=\"input\" type=\"file\"/>\n                                            </div>\n                                        </div>\n                                        <p style={{color: 'red'}}>{this.state.error? this.state.error:''}</p>\n                                        <button className=\"button is-block is-large is-fullwidth\" value=\"submit\">Edit profile image</button>\n                                    </form>\n                                </div>\n                                <div className=\"box\">\n                                    <form onSubmit={this.handleSubmitPersonalInfo}>\n                                        <div className=\"field\">\n                                            <div className=\"control\">\n                                                <p>{this.state.user.firstname}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"field\">\n                                            <div className=\"control\">\n                                            <p>{this.state.user.lastname}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"field\">\n                                            <div className=\"control\">\n                                            <p>{this.state.user.username}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"field\">\n                                            <label className=\"label\">Bio</label>\n                                            <div className=\"control has-icons-left has-icons-right\">\n                                            <div className=\"control\">\n                                                <textarea onChange={this.handleInput} \n                                                name='bio' className=\"textarea\" placeholder=\"Describe yourself in max 250 characters\" \n                                                maxLength=\"250\"\n                                                value={this.state.bio}/>\n                                            </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"field\">\n                                            <div className=\"control\">\n                                                <input onChange={this.handleInput} className=\"input is-large\" type=\"email\" name=\"email\" placeholder=\"e-mail\" value={this.state.email}/>\n                                            </div>\n                                        </div>\n                                        <div className=\"field\">\n                                            <div className=\"control\">\n                                            <p>{this.state.user.birth}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"field\">\n                                            <p className=\"control has-icons-left\">\n                                                <input onChange={this.handleInput} className=\"input is-large\" type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} pattern=\"^[a-zA-Z0-9]{8,}$\" title=\"At least 8 characters\"/>\n                                                <span className=\"icon is-small is-left\">\n                                                <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                                                </span>\n                                            </p>\n                                        </div>\n                                        <p style={{color: 'red'}}>{this.state.error? this.state.error:''}</p>\n                                        <button className=\"button is-block is-large is-fullwidth\" value=\"submit\">Edit personal information</button>\n                                    </form>\n                                </div>\n                            </div>\n                </section>\n        );\n    }\n}\n \nexport default UserSettings;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment'\nimport config from '../../config.json'\n\n//render my profile with my time wallet and basic personal settings\nclass MyProfile extends Component {\n    state = { \n        profileInfo: {}\n     }\n    \n    getProfileInfo = () =>{\n        axios({\n          method: \"get\",\n          url: `${config.api}/my-profile`,\n        //   url: `${config.REACT_APP_api}/my-profile`,\n          withCredentials: true\n        })\n        .then(responseFromApi => {\n          this.setState({\n            profileInfo: responseFromApi.data\n          })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n      }\n    \n    componentDidMount() {\n        this.getProfileInfo();\n    }\n    render() { \n   \n        return (\n            <div className=\"card\">\n                <div className=\"card-image\">\n                    <figure className=\"image is-128x128\">\n                    {/* <img src={`${config.REACT_APP_api}/${this.state.profileInfo.profileImage}`} alt=\"Profile\"/> */}\n                    <img src={`${config.api}/${this.state.profileInfo.profileImage}`} alt=\"Profile\"/>\n                    </figure>\n                </div>\n                <div className=\"card-content\">\n                    <div className=\"media\">\n                    <div className=\"media-content\">\n                        <p className=\"title is-4\">{this.state.profileInfo.firstname} {this.state.profileInfo.lastname}</p>\n                        <p className=\"subtitle is-6\">Username: &nbsp; {this.state.profileInfo.username}</p>\n                    </div>\n                    </div>\n                    <div className=\"content\">\n\n                        <p className=\"subtitle is-6\">Time wallet: {this.state.profileInfo.timeWallet} hour(s)</p>\n                        <p>Registration Date: &nbsp;<Moment format=\"D MMM YYYY\" withTitle>{this.state.profileInfo.registrationDate}</Moment></p>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default MyProfile;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport AllRequests from './AllRequests.js'\nimport MyPetitions from './MyPetitions'\nimport DirectMessages from './messages/DirectMessages'\nimport UserSettings from './UserSettings'\nimport MyProfile from './MyProfile'\nimport axios from 'axios';\nimport config from '../../config.json'\n\n\n\nclass UserDashboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeSection: 'all requests',\n            petitionsNotification: false,\n            listOfPetitions: [],\n            myOffers: false,\n            listOfMyOffers: [],\n            activeMenuItems: [true, false, false, false, false]\n        }\n        this.openSection = this.openSection.bind(this)\n    }\n    openSection(selectedSection) {\n        this.setState({activeSection: selectedSection})\n        switch(selectedSection) {\n            case 'all requests':\n                this.setState({activeMenuItems: [true, false, false, false, false]})\n                break;\n            case 'my petitions':\n                this.setState({activeMenuItems: [false, true, false, false, false]})\n                break;\n            case 'messages':\n                this.setState({activeMenuItems: [false, false, true, false, false]})\n                break;\n            case 'profile':\n                this.setState({activeMenuItems: [false, false, false, true, false]})\n                break;\n            case 'settings':\n                this.setState({activeMenuItems: [false, false, false, false, true]})\n                break;\n            default:\n                this.setState({activeMenuItems: [true, false, false, false, false]})\n        }\n    }\n    notificationControl = (dataFromRequest, statusControl) => {\n        let checkPending = []\n        for(var i = 0; i < dataFromRequest.length; i++) {\n            if(dataFromRequest[i].status === 'Pending') checkPending.push('new offer')\n        }\n        switch(statusControl) {\n            case 'offers':\n                if(checkPending.length > 0) return this.setState({myOffers: true})\n                else return this.setState({myOffers: false})\n            case 'petitions':\n                if(checkPending.length > 0) return this.setState({petitionsNotification: true})\n                else return this.setState({petitionsNotification: false})\n            default:\n            return null\n        }\n    }\n    getMyOffers = () => {\n        axios({\n            method: \"get\",\n            url: `${config.api}/my-offers`,\n            // url: `${config.REACT_APP_api}/my-offers`,\n            withCredentials: true\n          })\n          .then(responseFromApi => {\n            this.setState({\n              listOfMyOffers: responseFromApi.data,\n            })\n            this.notificationControl(responseFromApi.data, 'offers')\n          })\n    }\n    getMyPetitions = () =>{\n        axios({\n          method: \"get\",\n          url: `${config.api}/my-petitions`,\n        //   url: `${config.REACT_APP_api}/my-petitions`,\n          withCredentials: true\n        })\n        .then(responseFromApi => {\n          this.setState({\n            listOfPetitions: responseFromApi.data,\n          })\n          this.notificationControl(responseFromApi.data, 'petitions')\n        })\n    }   \n    componentDidMount(){\n        this.getMyPetitions()\n        this.getMyOffers()\n    }\n    render() { \n\n        return (\n            <div className='section'>\n            <div className='container'>\n            <div className='columns'>\n                <aside className=\"menu column is-3\">\n                    <ul className=\"menu-list\">\n                        <Link className={this.state.activeMenuItems[0] ? \"is-active\" : \"inactive\"} onClick={()=> {this.openSection('all requests')}}>My offers &nbsp;  \n                        { this.state.myOffers ? <i className=\"fas fa-bolt\"></i> : <i className=\"fas fa-times\"></i> }\n                        </Link>\n                    </ul>\n                    <ul className=\"menu-list\">\n                        <Link className={this.state.activeMenuItems[1] ? \"is-active\" : \"inactive\"} onClick={()=> {this.openSection('my petitions')}}>My petitions &nbsp;  \n                        { this.state.petitionsNotification ? <i className=\"fas fa-bolt\"></i> : <i className=\"fas fa-times\"></i> }\n                        </Link>\n                    </ul>\n                    <ul className=\"menu-list\">\n                        <Link className={this.state.activeMenuItems[2] ? \"is-active\" : \"inactive\"} onClick={()=> {this.openSection('messages')}}>\n                        Direct messages\n                        </Link></ul>\n                    <ul className=\"menu-list\">\n                        <Link className={this.state.activeMenuItems[3] ? \"is-active\" : \"inactive\"} onClick={()=> {this.openSection('profile')}}>\n                            Profile\n                        </Link></ul>\n                    <ul className=\"menu-list\">\n                        <Link className={this.state.activeMenuItems[4] ? \"is-active\" : \"inactive\"} onClick={()=> {this.openSection('settings')}}>\n                        Settings\n                        </Link></ul>\n                </aside>\n                <div className=\"column\">\n                {(() => {\n                    switch(this.state.activeSection) {\n                        case 'all requests':\n                            return <AllRequests {...this.props} {...this.state} updateOffers={this.getMyOffers} listOfMyOffers={this.state.listOfMyOffers}/>;\n                        case 'my petitions':\n                            return <MyPetitions {...this.props} {...this.state} listOfPetitions={this.state.listOfPetitions} />;\n                        case 'messages':\n                            return <DirectMessages/>\n                        case 'profile':\n                            return <MyProfile />\n                        case 'settings':\n                            return <UserSettings {...this.props}/>\n                        default:\n                            return <AllRequests {...this.props} {...this.state} listOfMyOffers={this.state.listOfMyOffers}/>\n                    }\n                })()}\n                </div>\n            </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default UserDashboard;","import React, { Component } from 'react';\nimport axios from 'axios'\nimport config from '../../config.json'\n\n//private router\n//in this component you can publish a new offer\nclass PublishOffer extends Component {\n    constructor(props){\n        super(props)\n        this.state = { \n            title:          '',\n            postalcode:     '',\n            description:    '',\n            date:           '',\n            duration:       '',\n            category:       '',\n            error:          ''\n        }\n        this.form = React.createRef()\n    }\n\n    //input postal code\n    handleInput = (event)=> {\n        let publish = {} //empty object\n        publish[event.target.name] = event.target.value\n        this.setState(publish)\n        \n    }   \n\n    //submit button\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        // let newOffer = this.state  \n        let newOffer = new FormData(this.form.current)\n        axios({\n        method: 'post',\n          url: `${config.REACT_APP_api}/publish-offer`,\n          config: {headers: {'Content-Type': 'multipart/form-data'}},\n          data: newOffer,\n          withCredentials : true\n          }).then(databaseResponse => {\n            this.props.history.push('/')\n          }).catch(err => {\n            this.setState({error: \"Something went wrong! Your offer was not published\"})\n          })\n    }\n \n    render() { \n        return ( \n            <>\n            <form ref={this.form} onSubmit={this.handleSubmit}>\n               \n                <div className=\"field\">\n                    <label className=\"label\">Title</label>\n                    <div className=\"control has-icons-left has-icons-right\">\n                    <div className=\"control\">\n                    <input onChange={this.handleInput} name='title' className=\"input\" type=\"text\" placeholder=\"Title\" value={this.state.title}/>\n                    </div>\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Postal code</label>\n                    <div className=\"control has-icons-left has-icons-right\">\n                    <div className=\"control\">\n                    <input onChange={this.handleInput} name='postalcode' className=\"input\" type=\"text\" placeholder=\"1077XT\" value={this.state.postalcode}/>\n                    </div>\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Description</label>\n                    <div className=\"control has-icons-left has-icons-right\">\n                    <div className=\"control\">\n                        <textarea onChange={this.handleInput} \n                        name='description' className=\"textarea\" placeholder=\"Describe your offer in max 250 characters\" \n                        maxLength=\"250\"\n                        value={this.state.description}/>\n                    </div>\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\">Date</label>\n                    <div className=\"control\">\n                        <input onChange={this.handleInput} name='date'className=\"input\" type=\"date\" placeholder=\"Date\" value={this.state.date}/>\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\">Duration</label>\n                    <div className=\"control\">\n                        <input onChange={this.handleInput} name='duration' className=\"input\" type=\"number\" placeholder=\"Duration\" value={this.state.duration} min='1'/>\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <label  className=\"label\">Category</label>\n                    <div className=\"control\">\n                        <div className=\"select\">\n                        <select name='category' value={this.state.category} onChange={this.handleInput}>\n                            <option>Select a category</option>\n                            <option value='house'>House</option>\n                            <option value='technology'>Technology</option>\n                            <option value=\"music\">Music</option>\n                            <option value=\"repair\">Repair</option>\n                            <option value=\"languages\">Languages</option>\n                            <option value=\"cooking\">Cooking</option>\n                        </select>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\">Image</label>\n                    <div className=\"control\">\n                        <input onChange={this.handleInput} name='image' className=\"input\" type=\"file\"/>\n                    </div>\n                </div>\n                <p style={{color: 'red'}}>{this.state.error? this.state.error:''}</p>\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <button className=\"button is-link\">Submit</button>\n                    </div>\n                    <div className=\"control\">\n                        <button className=\"button is-text\">Cancel</button>\n                    </div>\n                </div>\n                </form>\n            </>\n         );\n    }\n}\n \nexport default PublishOffer;","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport config from '../../config.json'\n\n//render login component\nclass Login extends Component {\n    state = { \n        username: '',\n        password: '',\n     }\n\n    //take an input and update status\n    handleInput = (event)=> {\n        let myInput = {} //empty object\n        myInput[event.target.name] = event.target.value\n        this.setState(myInput)\n    }\n\n    //send data with axios\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        let newUser = this.state\n        axios({\n            method: 'post',\n            url: `${config.api}/login`,\n            // url: `${config.REACT_APP_api}/login`,\n            data: newUser,\n            withCredentials : true,\n            }).then(databaseResponse => {\n                this.props.loggedIn(true,this.state.username)\n                this.props.history.push('/dashboard')\n            }).catch(err => {\n            this.setState({error: 'Username or email is incorrect'})    \n            this.props.history.push('/login')\n            })\n    }\n    //login box html\n    render() { \n        return ( \n            <section className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"column is-4 is-offset-4\">\n                            <h3 className=\"title has-text-grey\">Login</h3>\n                            <p className=\"subtitle has-text-grey\">Please login to proceed.</p>\n                            <div className=\"box\">\n                                <figure className=\"avatar\">\n                                    <img src=\"timextime.jpg\" alt=\"\"/>\n                                </figure>\n                                <form onSubmit={this.handleSubmit}>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input onChange={this.handleInput}className=\"input is-large\" type=\"username\" name=\"username\" placeholder=\"Username\" value={this.state.username} required/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input onChange={this.handleInput}className=\"input is-large\" type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} required/>\n                                        </div>\n                                    </div>\n                                    <p style={{color: 'red'}}>{this.state.error? this.state.error:''}</p>\n                                    <button className=\"button is-block is-large is-fullwidth\">Login</button>\n                                </form>\n                            </div>\n                            <p className=\"has-text-grey\"> New to Time4Time?\n                                <Link to=\"/signup\"> Sign Up</Link>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n         );\n    }\n}\n \nexport default Login;","import React, { Component } from 'react';\nimport axios  from 'axios';\nimport { Link } from 'react-router-dom'\nimport config from '../../config.json'\nclass SignUp extends Component {\n    \n    //set a values for signup form\n    state = { \n        username: '',\n        password: '',\n        firstname:'',\n        lastname:'',\n        email: '',\n        birth: '',\n        error: ''\n     }\n     \n    //take an input and update status\n    handleInput = (event)=> {\n        let myInput = {} //empty object\n        myInput[event.target.name] = event.target.value\n        this.setState(myInput)\n    }\n\n    //submit function\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let newUser = this.state\n        axios({\n            method: 'post',\n            url: `${config.api}/signup`,\n            // url: `${config.REACT_APP_api}/signup`,\n            data: newUser,\n            withCredentials: true,\n        }).then(databaseResponse => {\n            this.props.loggedIn(true)\n            this.props.history.push('/dashboard')\n        }).catch(err => {\n            this.setState({error: 'Username or email already taken'})\n        })\n    }\n\n    render() { \n        return ( \n            <section>\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"column is-4 is-offset-4\">\n                            <h3 className=\"title has-text-grey\">Sign up</h3>\n                            <p className=\"subtitle has-text-grey\">Please sign up to proceed.</p>\n                            <div className=\"box\">\n                                <figure className=\"avatar\">\n                                    <img src=\"timextime.jpg\" alt=\"\"/>\n                                </figure>\n                                <form onSubmit={this.handleSubmit}>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input onChange={this.handleInput} className=\"input is-large\" type=\"text\" name=\"firstname\" placeholder=\"First name\" value={this.state.firstname} required/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input onChange={this.handleInput} className=\"input is-large\" type=\"text\" name=\"lastname\" placeholder=\"Last name\" value={this.state.lastname} required/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input onChange={this.handleInput} className=\"input is-large\" type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} pattern=\"[a-zA-Z0-9]+\" title=\"only characters and numbers\" required/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input onChange={this.handleInput} className=\"input is-large\" type=\"email\" name=\"email\" placeholder=\"e-mail\" value={this.state.email} required/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input onChange={this.handleInput} className=\"input is-large\" type=\"date\" name=\"birth\" placeholder=\"Birth Date\" value={this.state.birth} required/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <label className=\"label\">Time wallet:</label>\n                                        <div className=\"control has-text-centered\">\n                                            <p style={{color: 'green'}}>When you sign up you get 2 hours to spend!</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <p className=\"control has-icons-left\">\n                                            <input onChange={this.handleInput} className=\"input is-large\" type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} pattern=\"^[a-zA-Z0-9]{8,}$\" title=\"At least 8 characters\" required/>\n                                            <span className=\"icon is-small is-left\">\n                                            <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <p style={{color: 'red'}}>{this.state.error? this.state.error:''}</p>\n                                    <button className=\"button is-block is-large is-fullwidth\" value=\"submit\">Sign up</button>\n                                </form>\n                            </div>\n                            <p className=\"has-text-grey\">Already got an account?\n                                <Link to=\"/login\"> Login</Link>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n         );\n    }\n}\n \nexport default SignUp;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment'\nimport config from '../../config.json'\n\n//Render and constructing review component, this router \n//it's private and you can only add a review when you have an account\nclass Review extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            reviewer: {}\n        }\n    }\n    //call to database and take username's reviewer\n    getReviewerUsername = () => {\n        axios({\n            method: 'post',\n            // url: `${config.REACT_APP_api}/reviewer`,\n            url: `${config.api}/reviewer`,\n            data: {reviewerId: this.props.reviewer},\n            withCredentials : true,\n        }).then(databaseResponse => {\n            this.setState({reviewer: databaseResponse.data})\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n    componentDidMount(){\n        this.getReviewerUsername()\n    }\n    //render review's form\n    render() { \n        return (\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <p className=\"title\">\n                        {this.props.opinion}\n                    </p>\n                    <p>Date <Moment format=\"D MMM YYYY\" withTitle>{this.props.date}</Moment></p>\n                    <p className=\"subtitle\">\n                        Username: {this.state.reviewer.username}\n                    </p>\n                </div>\n                </div>\n        );\n    }\n}\n \nexport default Review;","import React, { Component } from 'react';\nimport StarRatingComponent from 'react-star-rating-component';\nimport axios from 'axios';\nimport Moment from 'react-moment'\nimport Review from './Review'\nimport config from '../../config.json'\n\n//author profile component, this component it's private\n//You only see this component if you have a username\nclass AuthorProfile extends Component {\n    constructor() {\n        super();\n        this.state = {\n          rating: 1,\n          authorProfile:{},\n          opinion: '',\n          date: '',\n          error: '',\n          success: '',\n          bio: '',\n          newReview: undefined,\n          listOfReviews: [],\n          currentPage: 1,\n          reviewsPerPage: 5\n        };\n    this.form = React.createRef()\n    this.onStarClick = this.onStarClick.bind(this)\n    \n    }\n    //rating with start component\n    onStarClick(nextValue, prevValue, name) {\n        this.setState({rating: nextValue});\n    }\n    handleInput = (event) => {\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n    //get author info from backend\n    getAuthorInfo = () =>{\n        const {id} = this.props.match.params        \n        axios({\n          method: \"get\",\n          url: `${config.api}/author-profile/${id}`,\n        //   url: `${config.REACT_APP_api}/author-profile/${id}`,\n          withCredentials: true\n        })\n        .then(responseFromApi => {\n          this.setState({\n            authorProfile: responseFromApi.data\n          })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n    //add a review and sent to database\n    handleSubmitReview = (event) => {\n        event.preventDefault();\n        let formData = new FormData(this.form.current) \n        axios({\n            method: 'post',\n            url: `${config.api}/author-profile`,\n            // url: `${config.REACT_APP_api}/author-profile`,\n            config: { headers: {'Content-Type': 'multipart/form-data' }},\n            data: formData,\n            withCredentials : true,\n        }).then(databaseResponse => {\n            this.setState({success: 'You successfully added a review!', newReview: databaseResponse.data})\n            }).then(() => {\n                this.sendUserId()\n            }).catch(err => {\n                this.setState({error: 'Could not add your review'})\n            })\n    }\n    //send user id (review author)\n    sendUserId = () => {\n        axios({\n            method: 'post',\n            url: `${config.api}/user-reviewed-id`,\n            // url: `${config.REACT_APP_api}/user-reviewed-id`,\n\n            data: {userReviewedId: this.state.authorProfile._id, newReviewId: this.state.newReview._id},\n            withCredentials : true,\n        }).then(databaseResponse => {\n            console.log('Found the user')\n        }).catch(err => {\n            this.setState({error: 'Could not add your review'})\n        })\n    }\n    //render author's reviews\n    getReviews = () => {\n        axios({\n            method: 'get',\n            url: `${config.api}/get-reviews`,\n            // url: `${config.REACT_APP_api}/get-reviews`,\n            withCredentials : true,\n        }).then(databaseResponse => {\n            this.setState({listOfReviews: databaseResponse.data})\n        }).catch(err => {\n        })\n    }\n\n    handlePageClick = (event) => {\n        this.setState({currentPage: Number(event.target.id)})\n    }\n\n    componentDidMount() {\n        this.getAuthorInfo()\n        this.getReviews()\n    }\n\n    render() {\n        const { rating } = this.state;\n        const { listOfReviews, currentPage, reviewsPerPage } = this.state\n        const indexOfLastReview = currentPage * reviewsPerPage\n        const indexOfFirstReview = indexOfLastReview - reviewsPerPage\n        const currentReviews = listOfReviews.slice(indexOfFirstReview, indexOfLastReview)\n        const renderReviews = currentReviews.map (review => {\n            return <Review\n                rating={review.rating}\n                opinion={review.opinion}\n                date={review.date}\n                pictureUrl={review.picture}\n                reviewer={review.reviewer}\n            />\n        })\n\n        const pageNumbers = []\n        for (let i = 1; i <= Math.ceil(listOfReviews.length / reviewsPerPage); i++) {\n            pageNumbers.push(i)\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            return (\n                <li\n                    key={number}\n                    id={number}\n                    onClick={this.handlePageClick}\n                >\n                    {number}\n                </li>\n            )\n        })\n\n        //html content\n        return (\n            <div className=\"columns\">\n                <div className=\"card column is-3\">\n                    <div className=\"card-image\">\n                        <figure className=\"image is-square\">\n                            {/* <img src= {`${config.REACT_APP_api}/${this.state.authorProfile.profileImage}`} alt=\"User profile\"></img> */}\n                            <img src= {`${config.api}/${this.state.authorProfile.profileImage}`} alt=\"User profile\"></img>\n                        </figure>\n                    </div>\n                    <div className=\"card-content\">\n                        <div className=\"media\">\n                            <div className=\"media-content\">\n                                <p className=\"title is-4\">{this.state.authorProfile.firstname}&nbsp;{this.state.authorProfile.lastname}</p>\n                                <div className=\"content\">\n                                    <p>In the app from: &nbsp;<Moment format=\"D MMM YYYY\" withTitle>{this.state.authorProfile.registrationDate}</Moment></p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"content\">\n                            <p>{this.state.authorProfile.bio}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"column\">\n                    <form ref={this.form} onSubmit={this.handleSubmitReview}>\n                        <div className=\"field\">\n                            <label className=\"label\">Reviews</label>\n                            <div className=\"control\">\n                                <h2>Your Rating: {rating}</h2>\n                                <StarRatingComponent \n                                    name=\"rate1\" \n                                    starCount={5}\n                                    value={rating}\n                                    onStarClick={this.onStarClick}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Opinion</label>\n                            <div className=\"control has-icons-left has-icons-right\">\n                            <div className=\"control\">\n                                <textarea onChange={this.handleInput} name='opinion' value={this.state.opinion} className=\"textarea\" placeholder=\"Your opinion\"></textarea>\n                            </div>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Date</label>\n                            <div className=\"control\">\n                                <input onChange={this.handleInput} name='date' value={this.state.date} className=\"input\" type=\"date\" placeholder=\"Date of activity\"/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Picture</label>\n                            <div className=\"control\">\n                            <input onChange={this.handleInput} name='review-image' className=\"input\" type=\"file\"/>\n                            </div>\n                        </div>\n                        <div className=\"field is-grouped\">\n                            <div className=\"control\">\n                                <button handleSubmitReview className=\"button is-link\">Submit</button>\n                            </div>\n                            <div className=\"control\">\n                                <button className=\"button is-text\">Cancel</button>\n                            </div>\n                        </div>\n                        </form>\n                    </div>\n                    <h1 className=\"title\">List of reviews</h1>\n                    <div className=\"column\">\n                        { renderReviews }\n                        <ul id=\"page-numbers\">\n                            { renderPageNumbers }\n                        </ul>\n                    </div>\n                </div>\n          </div>\n        );\n    }\n}\n\n \nexport default AuthorProfile;","import React, { Component } from 'react';\n\n//Render footer\nclass Footer extends Component {\n    state = {  }\n    render() { \n        return (\n            <footer className=\"footer\">\n                <div className=\"container is-fluid columns\">\n                    <div className=\"column is-2 is-vcentered\">\n                        <img className=\"footer-img\" src=\"/logo_black.png\" alt=\"\"></img>\n                    </div>\n                    <div className=\"has-text-left column is-vcentered\">\n                        <p><strong>About us</strong></p>\n                        <p>In Time 4 Time, we believe in circular economy. Modern society is created around the value of money. Our purpose is to go back to simpler times when you could enjoy your free time without having to be productive all the time. If you too are tired of the pressure of modern times, you can join us and meet new people to learn lots of new things in an environment where sharing is the key.</p>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport axios from 'axios'\nimport config from '../config.json'\n\n//Nav component: render this nav if the user isn't login\nexport const UnauthNav = class UnauthNav extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            dropdownMenu: \"navbar-dropdown is-hidden\"\n        }\n    }\n    logMeOut = ()=> {\n        axios({\n            method: \"post\",\n            url: `${config.REACT_APP_api}/logout`,\n            withCredentials: true,\n        })\n        .then((response)=> {\n            this.props.logOut()\n        })\n        .catch((error)=> {\n            console.log(error)\n        })\n    }\n    toggleDropdownMenu = () => {\n        if( this.state.dropdownMenu === \"navbar-dropdown is-hidden\") this.setState({dropdownMenu: \"navbar-dropdown\"})\n        else this.setState({dropdownMenu: \"navbar-dropdown is-hidden\"})\n    }\n    render() { \n        return ( \n            <div className=\"navfill\">\n            <nav className=\"navbar is-transparent\">\n                <div className=\"container is-fluid\">\n                    <div className=\"navbar-brand\">\n                        <NavLink className=\"navbar-item\" to=\"/\">\n                            <img src=\"/logo_black.png\" alt=\"\" height=\"98\"></img>\n                        </NavLink>\n                        <div onClick={this.toggleDropdownMenu} className=\"navbar-burger burger\" data-target=\"navbarExampleTransparentExample\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </div>\n                    </div>\n                    <div className={this.state.dropdownMenu}>\n                        <NavLink onClick={this.toggleDropdownMenu} to='/' className=\"navbar-item\">\n                        Home\n                        </NavLink>\n                        <NavLink onClick={this.toggleDropdownMenu} to=\"/login\" className=\"navbar-item\">\n                        Login\n                        </NavLink>\n                        <NavLink onClick={this.toggleDropdownMenu} to=\"/signup\" className=\"navbar-item\">\n                        Sign up\n                        </NavLink>\n                    </div>\n                    <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n                        <div className=\"navbar-start\">\n                            <NavLink to='/' className=\"navbar-item\">Home</NavLink>\n                        </div>\n                        <div className=\"navbar-end\">\n                            <div className=\"navbar-item\">\n                                <div className=\"field is-grouped\">\n                                    <p className=\"control\">\n                                        <NavLink to=\"/login\">Login</NavLink>\n                                    </p>\n                                    <p className=\"control\">\n                                        <NavLink to=\"/signup\">Sign Up</NavLink>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>       \n            </div>     \n         );\n    }\n}\n\n//Auth nav\nexport const AuthNav = class AuthNav extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            dropdownMenu: \"navbar-dropdown is-hidden\"\n        }\n    }\n    logMeOut = ()=> {\n        axios({\n            method: \"post\",\n            url: `${config.REACT_APP_api}/logout`,\n            withCredentials: true,\n        })\n        .then((response)=> {\n            this.props.logOut()\n        })\n        .catch((error)=> {\n            console.log(error)\n        })\n    }\n    toggleDropdownMenu = () => {\n        if( this.state.dropdownMenu === \"navbar-dropdown is-hidden\") this.setState({dropdownMenu: \"navbar-dropdown\"})\n        else this.setState({dropdownMenu: \"navbar-dropdown is-hidden\"})\n    }\n    render() { \n        return ( \n            <div className='navfill'>\n            <nav className=\"navbar is-transparent\">\n                <div className=\"container is-fluid\">\n                    <div className=\"navbar-brand\">\n                        <NavLink className=\"navbar-item\" to=\"/\">\n                            <img src=\"/logo_black.png\" alt=\"\" height=\"98\"></img>\n                        </NavLink>\n                        <div onClick={this.toggleDropdownMenu} className=\"navbar-burger burger\" data-target=\"navbarExampleTransparentExample\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </div>\n                    </div>\n                    <div className={this.state.dropdownMenu}>\n                        <NavLink onClick={this.toggleDropdownMenu} to='/' className=\"navbar-item\">\n                        Home\n                        </NavLink>\n                        <NavLink onClick={this.toggleDropdownMenu} to=\"/dashboard\" className=\"navbar-item\">\n                        Dashboard\n                        </NavLink>\n                        <NavLink onClick={this.toggleDropdownMenu} to=\"/publish-offer\" className=\"navbar-item\">\n                        Publish new offer\n                        </NavLink>\n                        <NavLink onClick={() => {\n                            this.toggleDropdownMenu()\n                            this.logMeOut()\n                            }} to=\"/login\" className=\"navbar-item\">\n                        Logout\n                        </NavLink>\n                    </div>\n                    <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n                        <div className=\"navbar-start\">\n                            <NavLink to='/' className=\"navbar-item\">Home</NavLink>\n                            <NavLink to='/dashboard' className=\"navbar-item\">Dashboard</NavLink>\n                        </div>\n                        <div className=\"navbar-end\">\n                            <div className=\"navbar-item\">\n                                <div className=\"field is-grouped\">\n                                    <p className=\"control\">\n                                        <NavLink to=\"/publish-offer\" >\n                                            <button className=\"button is-success\">Publish new offer</button>\n                                        </NavLink>\n                                    </p>\n                                    <p className=\"control\">Hello, <NavLink to=\"/dashboard\">{this.props.username}</NavLink></p>\n                                    <p className=\"control\">\n                                        <NavLink to=\"/login\" onClick={this.logMeOut}>Logout</NavLink>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>        \n        </div>    \n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from './components/authentication/PrivateRoute'\nimport Main from './components/main/Main';\nimport UserDashboard from './components/dashboard/UserDashboard'\nimport PublishOffer from './components/publish-offer/PublishOffer'\nimport Login from './components/authentication/Login'\nimport Signup from './components/authentication/Signup'\nimport AuthorProfile from './components/author-profile/AuthorProfile'\nimport Footer from './components/Footer'\nimport { UnauthNav, AuthNav } from './components/Nav';\n\n\nclass App extends Component {\n    state = {\n        loggedIn : false,\n        username : \"\",\n        // requestNotification: false,\n        // petitionNotification: false,\n    }\n\n    loggedIn = (aBoolean, username) => {\n        this.setState({\n            loggedIn: aBoolean,\n            username: username,\n        })\n    }\n    \n    logOut = ()=> {\n        this.setState({\n            loggedIn: false,\n            username: \"\",\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n            <header> \n                {/* <Nav {...this.state} logOut={this.logOut} /> */}\n                {this.state.loggedIn ?\n                    <AuthNav {...this.state} logOut={this.logOut}/> :\n                    <UnauthNav {...this.state} />\n                }\n            </header>\n            <Switch>\n                <Route exact path='/' render={(props) => <Main {...props} {...this.state}/>} />\n                {/* En dashboard habra que pasar algun tipo de props o algo para por si queremos ir directamente a mensajes */}\n                <Route path='/login'  render={(props) => <Login {...props} loggedIn={this.loggedIn}/>} />\n                <Route path='/signup'  render={(props) => <Signup {...props} loggedIn={this.loggedIn}/>} /> \n                {/* <Route path='/dashboard' render={(props) => <UserDashboard {...props} />} /> */}\n                <PrivateRoute path='/dashboard' component={UserDashboard} {...this.state} currentUsername={this.state.username} loggedIn={this.state.loggedIn} />\n                {/* <Route path='/publish-offer'  render={(props) => <PublishOffer {...props} />} /> */}\n                <PrivateRoute path='/publish-offer'  component={PublishOffer} currentUsername={this.state.username} loggedIn={this.state.loggedIn} />\n                {/* <Route path='/profile:id'  render={(props) => <AuthorProfile {...props} />} /> */}\n                <PrivateRoute path='/profile/:id'  component={AuthorProfile} currentUsername={this.state.username} loggedIn={this.state.loggedIn} />\n            </Switch>\n            <Footer />\n            </div>\n        );\n    }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.css'\nimport './index.scss';\nimport './custom.scss'\nimport 'font-awesome/css/font-awesome.min.css';\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import '@fortawesome/fontawesome-free-webfonts/css/fontawesome.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}